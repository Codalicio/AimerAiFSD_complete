--------------------------------------------------------------------------------------------------

# TOPIC - HTML : Getting Started With HTML

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------


# Element & Tag in HTML :

Question) - What is a tag?
Answer) -
- HTML uses a system of "tags" to define the structure and layout of web pages.
- Tags are the building blocks of HTML documents and consists of angle brackets enclosing specific keywords.
- Tags provide instructions to web browsers on how to display the content.
- An HTML tag is composed of an opening tag and, in some cases, a closing tag. The opening tag starts with the less-than symbol (<), followed by the tag-name, and ends with a greater-than symbol (>). The closing tag is similar, but it also includes a forward slash (/) before the tag-name.

* For example :

------------------------------

* Opening Tag : <tagname>
* Closing Tag : </tagname>

------------------------------

# Types of HTML Tags :

# HTML Tags can be broadly categorized into two types :

1. Paired Tags(or Container Tags) :

- Paired tags have both an opening and a closing tag and can contain other HTML elements and text within them.
- They define a specific section or structure in the web page.

* Some common paired tags include :
- Some common examples are <html>, <head>, <p>, <span>, etc.

2. Singular Tags(or Void Tags) :

- In HTML, some are self-closing tags or void tags because they don't require a separate closing tag.
- These tags are used for elements that don't contain any content or don't have a closing counterpart.

* Example : <img />, <input />, <br />, and <meta />, etc.


Question) - What is an Element?
Answer) -
- HTML elements are the building blocks of an HTML document.
- HTML elements consists of a start tag, an end tag(if applicable), and content in between the tags. The start defines the beginning of an HTML element, and the end tag defines the end of an HTML element.

# Anatomy of an HTML Element :

* Each HTML element has a specific structure that defines its behavior and appearance on a web page.

* Here is a breakdown of the anatomy of an HTML element :

1. Opening Tag :
- This is the opening tag that defines the beginning of an HTML element. It is enclosed in angle brackets (<>).

2. Content :
- This is the text or other data that appears between the start and end tags of an HTML element.
- Some HTML elements do not require content and are self-closing.

3. Closing Tag :
- This is the closing tag that define the end of an HTML element.
- It is enclosed in angle brackets with a forward slash (/) before the element name.


# Some common tags :

1. Heading (<h1>, <h2>, <h3>, <h4>, <h5>, <h6>):

- Headings are used to define the titles or subtitles of a web page or a section of content.
- To put heading in HTML doc, we use <h1>, <h2>, <h3>, ..., <h6> tags. From <h1> to <h6>, represents different levels of content.

* Note :
- Browsers automatically add some white space(a margin) before and after a heading.

# Headings are important :

- Search engines use the headings to index the structure and content of your web pages.
- Users often skim a page by its headings. It is important to use headings to show the document structure.
- <h1> headings should be used for main heading, followed by <h2> headings, then the less important <h3> and so on.

* Example :

--------------------------------------------

<h1>Heading 1</h1>
<h2>Heading 2</h2>
<h3>Heading 3</h3>
<h4>Heading 4</h4>
<h5>Heading 5</h5>
<h6>Heading 6</h6>

--------------------------------------------

* Note :
- Use HTML headings for headings only.
- Don't use headings to make the text Big or Bold.

2. Paragraph <p> :

- The HTML <p> element defines a paragraph.
- A paragraph always starts on a new line, and browsers automatically add some white space(a margin) before and after a paragraph.

* Example :

-----------------------------------

<p>This is a paragraph.</p>
<p>This is another paragraph.</p>

-----------------------------------

3. <hr> Tag :

- The <hr> tags define a thematic break in an HTML page, and is most often displayed as a horizontal line.
- The <hr> element is used to separate content(or define a change) in an HTML page.

* Note :
- The <hr> tag is an empty tag, which means that it has no end tag.

* Example :

-------------------------------

<hr />

-------------------------------

4. HTML Line Breaks (<br /> Tag) :

- In HTML, <br /> element defines a line break.
- Use <br /> if a line breaks(a new line) without starting a new paragraph.

* Note :
- The <br /> tag is an empty tag, which means that it has no end tag.

* Example :

----------------------------------

<p>This is <br /> a paragraph <b /> with line breaks.</p>

-----------------------------------

5. <span> Tag :

- The <span> tag functions as an inline container, allowing us to markup and highlight specific portions of text within a document.
- it serves to emphasize or apply formatting to those particular sections without affecting the overall layout or structure of the page.


# Introduction to Emmet :

- Emmet is a powerful web development tool that enhances productivity by allowing web developers to write HTML and CSS code using abbreviations and shortcuts.
- It originated as a plugin called "Zen Coding", created by "Sergey Chikuyonok", and has since evolved into a widely adopted tool by web developers.

Question) - What is Emmet?
Answer) -
- Emmet is a shorthand syntax that helps you write HTML and CSS code more quickly and efficiently.
- Emmet uses abbreviations that expand into standard HTML and CSS code, so you can write complex structures with just a few keystrokes.
- Emmet can save you a lot of time and typing, it can also help you write more consistent and error-free code.
- Emmet is a powerful tool that can be used by web developers of all levels of experience.
- Emmet is a great way to improve your productivity and code quality, and it can also help you learn HTML and CSS faster.

* For example, to create an HTML "div" element with the class "my-class", you would type : 
- (div.my-class).
- Emmet will then expand this abbreviation into the full HTML code for the div element.

Question) - Why use Emmet?
Answer) -
- Emmet is a powerful tool that can help web developers write code faster, easier, and more consistently.

# Here are the some benefits of using Emmet :

* Increased productivity :
- Emmet allows you to write code at a faster pace, speeding up your development workflow.
- With it's abbreviation-based approach, you can express complex structures and repetitive patterns using just a few keystrokes.

* Simplified syntax :
- Emmet introduces a simplified syntax that is easy to learn and use.
- It leverages the familiarity of CSS selectors and combines it with HTML element names to create powerful and expressive abbreviations.

* Code generation :
- Emmet can generate repetitive code snippets with ease.
- For example, you can use Emmet to quickly create a list of multiple HTML elements, each with an incremental id or class, in a single command. This feature saves time and reduces the chances of human error when writing repetitive code.

* Editor and IDE support :
- Emmet is supported by a wide range of popular text editors and integrated development environments(IDEs), including Visual Studio Code, Sublime Text, Atom, and more. This extensive support ensures that you can integrate Emmet into your preferred coding environment, enhancing your coding experience.

# Basic syntax and abbreviation :

* Here's an overview of the basic syntax and abbreviation :

1. HTML Elements :
- To generate HTML elements, you can simply write the name of the element.

- For example, div and p expands to :

--------------------------------------------

<div></div>
<p></p>

---------------------------------------------

2. Nested Elements :
- You can nest element inside each other by using the greater-than(>) symbol.

- For example, div>ul>li expands to :

---------------------------------------

<div>
    <ul>
        <li></li>
    </ul>
</div>

---------------------------------------

3. Element IDs and Classes :
- To add an ID to an element, use the hash(#) symbol, followed by the ID name.
- To add a class, use the dot(.) symbol, followed by the class name.

- For example, div#lead and div.container expands to :

----------------------------------------

<div id="lead"></div>
<div class="container"></div>

----------------------------------------

* Note :
- You can also use #lead or .container to create div specifically.

4. Sibling Elements :
- You can create sibling elements by using the plus(+) symbol.

- For example, h1+p expands to :

--------------------------------------

<h1></h1>
<p></p>

--------------------------------------

5. Multiplication :
- You can multiplication operator(*) to generate multiple elements.
- Specify the number followed by the element abbreviation.

- For example, ul>li*3 expands to :

---------------------------------------

<ul>
    <li></li>
    <li></li>
    <li></li>
</ul>

--------------------------------------

6. Text Contents :
- To add text content to an element, enclose the desired text within curly braces {}.

- For example, h2{Hello} expands to :

--------------------------------------

<h2>Hello</h2>

--------------------------------------

7. Attributes :
- You can include attributes in an element by using square brackets [] and specifying the attribute name and value.

- For example, a[href="https://www.aimerz.ai"] expand to :

-------------------------------------

<a href="https://www.aimerz.ai">

-------------------------------------

-------------------------------------------------------------------------------------------------------

